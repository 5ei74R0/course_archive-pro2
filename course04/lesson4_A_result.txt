## Q. 1
    ### explanation
    - クラスメソッド`getSei()`がインスタンス変数`sei`にアクセスしようとしている。


## Q. 2
    ### explanation
    - シグネチャが同じメソッド`setSei()`が2つ定義されており、区別できなくなっている。


## Q. 3
    ### explanation
    - 定数`PI`に対して代入しようとしている。


## Q. 4
    ### result
    ```stdout
    A: 25
    B: 55
    C: 6.4
    ```

    ### explanation
    - シグネチャからどのメソッドを呼び出すかを判断している。
    - まず1行目は2つのint型を引数に取っているためAが呼び出される。
    - まず2行目は3つのint型を引数に取っているためBが呼び出される。
    - まず3行目は2つのfloat型を引数に取っているためCが呼び出される。


## Q. 5
    ###result
    ```stdout
    C: 22.1
    A: 34
    C: 56.1
    ```

    ### explanation
    - 最初に`getSum(20, 2.1)`が実行される。
      これはfloat型の引数を持つためCを呼び出したものとして処理される。
    - 次に`getSum(4, 30)`が実行される。
      これは2つのint型を引数にとるため、Aを呼び出したものとして処理される。
    - 上記の処理を経て外側の`getSum()`が`getSum(22.1, 34)`として実行される。
      これはこれはfloat型の引数を持つためCを呼び出したものとして処理される。
    - 以上でプログラムが終了し、上のような出力となる。


## Q. 6
    ### explanation
    ```java
        } else {
            y = "Java";
        }
    ```
    - 上記の`else`のブロックでローカル変数`y`は`String`として宣言されていないため、コンパイルできない。
